buildscript {
    dependencies {
        classpath group: 'org.yaml', name: 'snakeyaml', version: '1.24'
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'checkstyle'
    id 'java-library'
    id 'jacoco'
    id 'com.jfrog.bintray' version "1.8.4"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.owasp.dependencycheck' version '5.2.0'
    id 'com.github.ben-manes.versions' version '0.21.0'
    id 'org.sonarqube' version '2.7.1'
}

checkstyle {
    maxWarnings = 0

    toolVersion = '8.18'
    // need to set configDir to rootDir otherwise submodule will use submodule/config/checkstyle
    configDir = new File(rootDir, 'config/checkstyle')
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'false' ? 11 : 0
    suppressionFile = 'dependency-check-suppressions.xml'
    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

compileJava {
    options.compilerArgs << '-parameters' << '-Xlint:deprecation'
}

compileTestJava {
    options.compilerArgs << '-Xlint:deprecation'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://dl.bintray.com/hmcts/hmcts-maven"
    }
    jcenter()
}

def fileVersion = new org.yaml.snakeyaml.Yaml().load(new File("VERSION.yaml").newInputStream())

group = 'uk.gov.hmcts.reform'
version = fileVersion.TAG

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.8'

    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.9'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.9'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.6'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
}

jar {
    manifest {
        attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
    }
}

task printVersion {
    doLast {
        print project.version
    }
}

def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "http://www.opensource.org/licenses/mit-license.php"
            distribution "repo"
        }
    }

    scm {
        url "https://github.com/hmcts/cmc-ccd-domain"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Domain associated with money claim in ccd')
                root.appendNode('name', 'Money Claim CCD Domain')
                root.appendNode('url', 'https://github.com/hmcts/cmc-ccd-domain')
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = project.name
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hmcts/cmc-ccd-domain'
        version {
            name = project.version
        }
    }
}
